debug: true
server:
  port: 8088
spring:
  application:
    name: swiftboot-demo-app-server
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:file:./target/swiftboot
#    driverClassName: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/swiftboot?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#    username: root
#    password: 12345678
#    driverClassName: org.postgresql.Driver
#    url: jdbc:postgresql://localhost:5432/swiftboot
#    username: postgres
#    password: mandalorian2023
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
#    database-platform: org.hibernate.dialect.MySQL8Dialect
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
    show-sql: true
    open-in-view: false
#  datasource:
#    driverClassName: org.h2.Driver
#    url: jdbc:h2:file:./target/swiftboot
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: update
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    properties:
#      hibernate:
#        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
#    show-sql: false
#    open-in-view: false
  sql:
    init:
      mode: always
logging:
  level:
    root: INFO
    org.swiftboot: TRACE
  file:
    name: /var/log/swiftboot-demo-app-server.log
swiftboot:
  web:
    filter:
      cors: true
    validation:
      resultInJson: false
  data:
    model:
      autoGenerateId: true
      autoUpdateTimeStrategy: on-change
      initData:
        enabled: true
        baseDir: init/
        fallback: true
  auth:
    enabled: true
#    authType: session
#    session:
#      type: redis
#      group: user_session
#      expiresIn: 1800
#      updateExpireTime: true
#      useCookie: true
#      cookiePath: /
    authType: jwt
    jwt:
      secret: d9c0fd4d4aa9c7c228cd8194efcff1d0ec200310ba41e106a198d05025cea15f147f2bfe6d5a415656bf53c4b843d269ccf7921d65fc652f00008eda95393e709ec0d4c12b6f1fd18da0d470ca9750313c082d49f869311029663deb7ae7864791d22ab3424b8a85f6c63f73b86c49d6d50d1b21527c9274e4f1ff2143fe5b28bf69d14688b15d4711f0c03c25db2624ee830a3450693ad5e5070d4a7a1fc046ffe1cd1e9fa0b32f58b041e2e859bfdf92eff72a9f1ebd387470429dbba6af57b30b0ba76f68e53ccb87949972649c34322811f1b3966ee87ffa9dc38d6a2737de88f0a9aaa704d52b25d1f3ab7048c5e55e140cdc71aae0b35644ac7834c19f
      accessTokenExpirationSeconds: 180
      refreshTokenExpirationSeconds: 1800
