debug:
  ${SPRINGBOOT_DEBUG:false}
server:
  port: 8081
swiftboot:
  demo:
    security:
      baseUrl: http://127.0.0.1:8081
  web:
    filter:
      cors: true
    validation:
      resultInJson: false
  data:
    model:
      autoGenerateId: true
      autoUpdateTimeStrategy: on-change
      initData:
        enabled: true
        baseDir: init/
        fallback: true
  auth:
    jwt:
      secret: d9c0fd4d4aa9c7c228cd8194efcff1d0ec200310ba41e106a198d05025cea15f147f2bfe6d5a415656bf53c4b843d269ccf7921d65fc652f00008eda95393e709ec0d4c12b6f1fd18da0d470ca9750313c082d49f869311029663deb7ae7864791d22ab3424b8a85f6c63f73b86c49d6d50d1b21527c9274e4f1ff2143fe5b28bf69d14688b15d4711f0c03c25db2624ee830a3450693ad5e5070d4a7a1fc046ffe1cd1e9fa0b32f58b041e2e859bfdf92eff72a9f1ebd387470429dbba6af57b30b0ba76f68e53ccb87949972649c34322811f1b3966ee87ffa9dc38d6a2737de88f0a9aaa704d52b25d1f3ab7048c5e55e140cdc71aae0b35644ac7834c19f
      accessTokenExpirationSeconds: 300
      refreshTokenExpirationSeconds: 10080
      revokeType: direct
spring:
  application:
    name: swiftboot-demo-security
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:file:${user.dir}/db/swiftboot-demo-security
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
    show-sql: false
    open-in-view: false
#  datasource:
#    url: jdbc:postgresql://${DB_URL:127.0.0.1}:${DB_PORT:5432}/${DB_DATABASE:postgres}
#    username: ${DB_USERNAME:postgres}
#    password: ${DB_PASSWORD:123456}
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    show-sql: false
#    open-in-view: false
#    properties:
#      hibernate:
#        format_sql: true
#        hbm2ddl:
#          auto: update
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        tmp:
#          use_jdbc_metadata_defaults: false
  sql:
    init:
      mode: always
  security:
    oauth2:
      client:
        registration:
          dingtalk:
            provider: dingtalk
            scope:
              - openid
            authorization-grant-type: authorization_code
            redirect-uri: http://swiftboot.org:8081/login/oauth2/code/dingtalk
            client-id: ${OAUTH2_CLIENT_ID_DINGTALK}
            client-secret: ${OAUTH2_CLIENT_SECRET_DINGTALK}
          feishu:
            provider: feishu
            scope:
              - offline_access
            authorization-grant-type: authorization_code
            redirect-uri: http://swiftboot.org:8081/login/oauth2/code/feishu
            client-id: ${OAUTH2_CLIENT_ID_FEISHU}
            client-secret: ${OAUTH2_CLIENT_SECRET_FEISHU}
        provider:
          dingtalk:
            authorization-uri: https://login.dingtalk.com/oauth2/auth?prompt=consent
            token-uri: https://api.dingtalk.com/v1.0/oauth2/userAccessToken
            user-info-uri: https://api.dingtalk.com/v1.0/contact/users/me
            user-name-attribute: sub
          feishu:
            authorization-uri: https://accounts.feishu.cn/open-apis/authen/v1/authorize
            token-uri: https://open.feishu.cn/open-apis/authen/v2/oauth/token
            user-info-uri: https://open.feishu.cn/open-apis/authen/v1/user_info
            user-name-attribute: data
logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    okhttp3: DEBUG
    org.apache.hc.client5: DEBUG
    org.swiftboot: TRACE
  file:
    name: ${user.dir}/logs/swiftboot-demo-security.log
